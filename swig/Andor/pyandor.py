# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.4
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pyandor', [dirname(__file__)])
        except ImportError:
            import _pyandor
            return _pyandor
        if fp is not None:
            try:
                _mod = imp.load_module('_pyandor', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _pyandor = swig_import_helper()
    del swig_import_helper
else:
    import _pyandor
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class longp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, longp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, longp, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _pyandor.new_longp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pyandor.delete_longp
    __del__ = lambda self : None;
    def assign(self, *args): return _pyandor.longp_assign(self, *args)
    def value(self): return _pyandor.longp_value(self)
    def cast(self): return _pyandor.longp_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pyandor.longp_frompointer
    if _newclass:frompointer = staticmethod(_pyandor.longp_frompointer)
longp_swigregister = _pyandor.longp_swigregister
longp_swigregister(longp)

def longp_frompointer(*args):
  return _pyandor.longp_frompointer(*args)
longp_frompointer = _pyandor.longp_frompointer

class uintp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, uintp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, uintp, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _pyandor.new_uintp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pyandor.delete_uintp
    __del__ = lambda self : None;
    def assign(self, *args): return _pyandor.uintp_assign(self, *args)
    def value(self): return _pyandor.uintp_value(self)
    def cast(self): return _pyandor.uintp_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pyandor.uintp_frompointer
    if _newclass:frompointer = staticmethod(_pyandor.uintp_frompointer)
uintp_swigregister = _pyandor.uintp_swigregister
uintp_swigregister(uintp)

def uintp_frompointer(*args):
  return _pyandor.uintp_frompointer(*args)
uintp_frompointer = _pyandor.uintp_frompointer

class intp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, intp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, intp, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _pyandor.new_intp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pyandor.delete_intp
    __del__ = lambda self : None;
    def assign(self, *args): return _pyandor.intp_assign(self, *args)
    def value(self): return _pyandor.intp_value(self)
    def cast(self): return _pyandor.intp_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pyandor.intp_frompointer
    if _newclass:frompointer = staticmethod(_pyandor.intp_frompointer)
intp_swigregister = _pyandor.intp_swigregister
intp_swigregister(intp)

def intp_frompointer(*args):
  return _pyandor.intp_frompointer(*args)
intp_frompointer = _pyandor.intp_frompointer

class floatp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, floatp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, floatp, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _pyandor.new_floatp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pyandor.delete_floatp
    __del__ = lambda self : None;
    def assign(self, *args): return _pyandor.floatp_assign(self, *args)
    def value(self): return _pyandor.floatp_value(self)
    def cast(self): return _pyandor.floatp_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pyandor.floatp_frompointer
    if _newclass:frompointer = staticmethod(_pyandor.floatp_frompointer)
floatp_swigregister = _pyandor.floatp_swigregister
floatp_swigregister(floatp)

def floatp_frompointer(*args):
  return _pyandor.floatp_frompointer(*args)
floatp_frompointer = _pyandor.floatp_frompointer

AT_SDKVersion = _pyandor.AT_SDKVersion
AT_DeviceDriverVersion = _pyandor.AT_DeviceDriverVersion
AT_NoOfVersionInfoIds = _pyandor.AT_NoOfVersionInfoIds
AT_VERSION_INFO_LEN = _pyandor.AT_VERSION_INFO_LEN
AT_CONTROLLER_CARD_MODEL_LEN = _pyandor.AT_CONTROLLER_CARD_MODEL_LEN
AT_DDGLite_ChannelA = _pyandor.AT_DDGLite_ChannelA
AT_DDGLite_ChannelB = _pyandor.AT_DDGLite_ChannelB
AT_DDGLite_ChannelC = _pyandor.AT_DDGLite_ChannelC
AT_DDGLite_ControlBit_GlobalEnable = _pyandor.AT_DDGLite_ControlBit_GlobalEnable
AT_DDGLite_ControlBit_ChannelEnable = _pyandor.AT_DDGLite_ControlBit_ChannelEnable
AT_DDGLite_ControlBit_FreeRun = _pyandor.AT_DDGLite_ControlBit_FreeRun
AT_DDGLite_ControlBit_DisableOnFrame = _pyandor.AT_DDGLite_ControlBit_DisableOnFrame
AT_DDGLite_ControlBit_RestartOnFire = _pyandor.AT_DDGLite_ControlBit_RestartOnFire
AT_DDGLite_ControlBit_Invert = _pyandor.AT_DDGLite_ControlBit_Invert
AT_DDGLite_ControlBit_EnableOnFire = _pyandor.AT_DDGLite_ControlBit_EnableOnFire
AT_DDG_POLARITY_POSITIVE = _pyandor.AT_DDG_POLARITY_POSITIVE
AT_DDG_POLARITY_NEGATIVE = _pyandor.AT_DDG_POLARITY_NEGATIVE
AT_DDG_TERMINATION_50OHMS = _pyandor.AT_DDG_TERMINATION_50OHMS
AT_DDG_TERMINATION_HIGHZ = _pyandor.AT_DDG_TERMINATION_HIGHZ
AT_STEPMODE_CONSTANT = _pyandor.AT_STEPMODE_CONSTANT
AT_STEPMODE_EXPONENTIAL = _pyandor.AT_STEPMODE_EXPONENTIAL
AT_STEPMODE_LOGARITHMIC = _pyandor.AT_STEPMODE_LOGARITHMIC
AT_STEPMODE_LINEAR = _pyandor.AT_STEPMODE_LINEAR
AT_STEPMODE_OFF = _pyandor.AT_STEPMODE_OFF
AT_GATEMODE_FIRE_AND_GATE = _pyandor.AT_GATEMODE_FIRE_AND_GATE
AT_GATEMODE_FIRE_ONLY = _pyandor.AT_GATEMODE_FIRE_ONLY
AT_GATEMODE_GATE_ONLY = _pyandor.AT_GATEMODE_GATE_ONLY
AT_GATEMODE_CW_ON = _pyandor.AT_GATEMODE_CW_ON
AT_GATEMODE_CW_OFF = _pyandor.AT_GATEMODE_CW_OFF
AT_GATEMODE_DDG = _pyandor.AT_GATEMODE_DDG
class AndorCapabilities(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, AndorCapabilities, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, AndorCapabilities, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ulSize"] = _pyandor.AndorCapabilities_ulSize_set
    __swig_getmethods__["ulSize"] = _pyandor.AndorCapabilities_ulSize_get
    if _newclass:ulSize = _swig_property(_pyandor.AndorCapabilities_ulSize_get, _pyandor.AndorCapabilities_ulSize_set)
    __swig_setmethods__["ulAcqModes"] = _pyandor.AndorCapabilities_ulAcqModes_set
    __swig_getmethods__["ulAcqModes"] = _pyandor.AndorCapabilities_ulAcqModes_get
    if _newclass:ulAcqModes = _swig_property(_pyandor.AndorCapabilities_ulAcqModes_get, _pyandor.AndorCapabilities_ulAcqModes_set)
    __swig_setmethods__["ulReadModes"] = _pyandor.AndorCapabilities_ulReadModes_set
    __swig_getmethods__["ulReadModes"] = _pyandor.AndorCapabilities_ulReadModes_get
    if _newclass:ulReadModes = _swig_property(_pyandor.AndorCapabilities_ulReadModes_get, _pyandor.AndorCapabilities_ulReadModes_set)
    __swig_setmethods__["ulTriggerModes"] = _pyandor.AndorCapabilities_ulTriggerModes_set
    __swig_getmethods__["ulTriggerModes"] = _pyandor.AndorCapabilities_ulTriggerModes_get
    if _newclass:ulTriggerModes = _swig_property(_pyandor.AndorCapabilities_ulTriggerModes_get, _pyandor.AndorCapabilities_ulTriggerModes_set)
    __swig_setmethods__["ulCameraType"] = _pyandor.AndorCapabilities_ulCameraType_set
    __swig_getmethods__["ulCameraType"] = _pyandor.AndorCapabilities_ulCameraType_get
    if _newclass:ulCameraType = _swig_property(_pyandor.AndorCapabilities_ulCameraType_get, _pyandor.AndorCapabilities_ulCameraType_set)
    __swig_setmethods__["ulPixelMode"] = _pyandor.AndorCapabilities_ulPixelMode_set
    __swig_getmethods__["ulPixelMode"] = _pyandor.AndorCapabilities_ulPixelMode_get
    if _newclass:ulPixelMode = _swig_property(_pyandor.AndorCapabilities_ulPixelMode_get, _pyandor.AndorCapabilities_ulPixelMode_set)
    __swig_setmethods__["ulSetFunctions"] = _pyandor.AndorCapabilities_ulSetFunctions_set
    __swig_getmethods__["ulSetFunctions"] = _pyandor.AndorCapabilities_ulSetFunctions_get
    if _newclass:ulSetFunctions = _swig_property(_pyandor.AndorCapabilities_ulSetFunctions_get, _pyandor.AndorCapabilities_ulSetFunctions_set)
    __swig_setmethods__["ulGetFunctions"] = _pyandor.AndorCapabilities_ulGetFunctions_set
    __swig_getmethods__["ulGetFunctions"] = _pyandor.AndorCapabilities_ulGetFunctions_get
    if _newclass:ulGetFunctions = _swig_property(_pyandor.AndorCapabilities_ulGetFunctions_get, _pyandor.AndorCapabilities_ulGetFunctions_set)
    __swig_setmethods__["ulFeatures"] = _pyandor.AndorCapabilities_ulFeatures_set
    __swig_getmethods__["ulFeatures"] = _pyandor.AndorCapabilities_ulFeatures_get
    if _newclass:ulFeatures = _swig_property(_pyandor.AndorCapabilities_ulFeatures_get, _pyandor.AndorCapabilities_ulFeatures_set)
    __swig_setmethods__["ulPCICard"] = _pyandor.AndorCapabilities_ulPCICard_set
    __swig_getmethods__["ulPCICard"] = _pyandor.AndorCapabilities_ulPCICard_get
    if _newclass:ulPCICard = _swig_property(_pyandor.AndorCapabilities_ulPCICard_get, _pyandor.AndorCapabilities_ulPCICard_set)
    __swig_setmethods__["ulEMGainCapability"] = _pyandor.AndorCapabilities_ulEMGainCapability_set
    __swig_getmethods__["ulEMGainCapability"] = _pyandor.AndorCapabilities_ulEMGainCapability_get
    if _newclass:ulEMGainCapability = _swig_property(_pyandor.AndorCapabilities_ulEMGainCapability_get, _pyandor.AndorCapabilities_ulEMGainCapability_set)
    __swig_setmethods__["ulFTReadModes"] = _pyandor.AndorCapabilities_ulFTReadModes_set
    __swig_getmethods__["ulFTReadModes"] = _pyandor.AndorCapabilities_ulFTReadModes_get
    if _newclass:ulFTReadModes = _swig_property(_pyandor.AndorCapabilities_ulFTReadModes_get, _pyandor.AndorCapabilities_ulFTReadModes_set)
    def initsize(self): return _pyandor.AndorCapabilities_initsize(self)
    def __init__(self): 
        this = _pyandor.new_AndorCapabilities()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pyandor.delete_AndorCapabilities
    __del__ = lambda self : None;
AndorCapabilities_swigregister = _pyandor.AndorCapabilities_swigregister
AndorCapabilities_swigregister(AndorCapabilities)

class ColorDemosaicInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ColorDemosaicInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ColorDemosaicInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iX"] = _pyandor.ColorDemosaicInfo_iX_set
    __swig_getmethods__["iX"] = _pyandor.ColorDemosaicInfo_iX_get
    if _newclass:iX = _swig_property(_pyandor.ColorDemosaicInfo_iX_get, _pyandor.ColorDemosaicInfo_iX_set)
    __swig_setmethods__["iY"] = _pyandor.ColorDemosaicInfo_iY_set
    __swig_getmethods__["iY"] = _pyandor.ColorDemosaicInfo_iY_get
    if _newclass:iY = _swig_property(_pyandor.ColorDemosaicInfo_iY_get, _pyandor.ColorDemosaicInfo_iY_set)
    __swig_setmethods__["iAlgorithm"] = _pyandor.ColorDemosaicInfo_iAlgorithm_set
    __swig_getmethods__["iAlgorithm"] = _pyandor.ColorDemosaicInfo_iAlgorithm_get
    if _newclass:iAlgorithm = _swig_property(_pyandor.ColorDemosaicInfo_iAlgorithm_get, _pyandor.ColorDemosaicInfo_iAlgorithm_set)
    __swig_setmethods__["iXPhase"] = _pyandor.ColorDemosaicInfo_iXPhase_set
    __swig_getmethods__["iXPhase"] = _pyandor.ColorDemosaicInfo_iXPhase_get
    if _newclass:iXPhase = _swig_property(_pyandor.ColorDemosaicInfo_iXPhase_get, _pyandor.ColorDemosaicInfo_iXPhase_set)
    __swig_setmethods__["iYPhase"] = _pyandor.ColorDemosaicInfo_iYPhase_set
    __swig_getmethods__["iYPhase"] = _pyandor.ColorDemosaicInfo_iYPhase_get
    if _newclass:iYPhase = _swig_property(_pyandor.ColorDemosaicInfo_iYPhase_get, _pyandor.ColorDemosaicInfo_iYPhase_set)
    __swig_setmethods__["iBackground"] = _pyandor.ColorDemosaicInfo_iBackground_set
    __swig_getmethods__["iBackground"] = _pyandor.ColorDemosaicInfo_iBackground_get
    if _newclass:iBackground = _swig_property(_pyandor.ColorDemosaicInfo_iBackground_get, _pyandor.ColorDemosaicInfo_iBackground_set)
    def __init__(self): 
        this = _pyandor.new_ColorDemosaicInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pyandor.delete_ColorDemosaicInfo
    __del__ = lambda self : None;
ColorDemosaicInfo_swigregister = _pyandor.ColorDemosaicInfo_swigregister
ColorDemosaicInfo_swigregister(ColorDemosaicInfo)

class WhiteBalanceInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, WhiteBalanceInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, WhiteBalanceInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iSize"] = _pyandor.WhiteBalanceInfo_iSize_set
    __swig_getmethods__["iSize"] = _pyandor.WhiteBalanceInfo_iSize_get
    if _newclass:iSize = _swig_property(_pyandor.WhiteBalanceInfo_iSize_get, _pyandor.WhiteBalanceInfo_iSize_set)
    __swig_setmethods__["iX"] = _pyandor.WhiteBalanceInfo_iX_set
    __swig_getmethods__["iX"] = _pyandor.WhiteBalanceInfo_iX_get
    if _newclass:iX = _swig_property(_pyandor.WhiteBalanceInfo_iX_get, _pyandor.WhiteBalanceInfo_iX_set)
    __swig_setmethods__["iY"] = _pyandor.WhiteBalanceInfo_iY_set
    __swig_getmethods__["iY"] = _pyandor.WhiteBalanceInfo_iY_get
    if _newclass:iY = _swig_property(_pyandor.WhiteBalanceInfo_iY_get, _pyandor.WhiteBalanceInfo_iY_set)
    __swig_setmethods__["iAlgorithm"] = _pyandor.WhiteBalanceInfo_iAlgorithm_set
    __swig_getmethods__["iAlgorithm"] = _pyandor.WhiteBalanceInfo_iAlgorithm_get
    if _newclass:iAlgorithm = _swig_property(_pyandor.WhiteBalanceInfo_iAlgorithm_get, _pyandor.WhiteBalanceInfo_iAlgorithm_set)
    __swig_setmethods__["iROI_left"] = _pyandor.WhiteBalanceInfo_iROI_left_set
    __swig_getmethods__["iROI_left"] = _pyandor.WhiteBalanceInfo_iROI_left_get
    if _newclass:iROI_left = _swig_property(_pyandor.WhiteBalanceInfo_iROI_left_get, _pyandor.WhiteBalanceInfo_iROI_left_set)
    __swig_setmethods__["iROI_right"] = _pyandor.WhiteBalanceInfo_iROI_right_set
    __swig_getmethods__["iROI_right"] = _pyandor.WhiteBalanceInfo_iROI_right_get
    if _newclass:iROI_right = _swig_property(_pyandor.WhiteBalanceInfo_iROI_right_get, _pyandor.WhiteBalanceInfo_iROI_right_set)
    __swig_setmethods__["iROI_top"] = _pyandor.WhiteBalanceInfo_iROI_top_set
    __swig_getmethods__["iROI_top"] = _pyandor.WhiteBalanceInfo_iROI_top_get
    if _newclass:iROI_top = _swig_property(_pyandor.WhiteBalanceInfo_iROI_top_get, _pyandor.WhiteBalanceInfo_iROI_top_set)
    __swig_setmethods__["iROI_bottom"] = _pyandor.WhiteBalanceInfo_iROI_bottom_set
    __swig_getmethods__["iROI_bottom"] = _pyandor.WhiteBalanceInfo_iROI_bottom_get
    if _newclass:iROI_bottom = _swig_property(_pyandor.WhiteBalanceInfo_iROI_bottom_get, _pyandor.WhiteBalanceInfo_iROI_bottom_set)
    __swig_setmethods__["iOperation"] = _pyandor.WhiteBalanceInfo_iOperation_set
    __swig_getmethods__["iOperation"] = _pyandor.WhiteBalanceInfo_iOperation_get
    if _newclass:iOperation = _swig_property(_pyandor.WhiteBalanceInfo_iOperation_get, _pyandor.WhiteBalanceInfo_iOperation_set)
    def __init__(self): 
        this = _pyandor.new_WhiteBalanceInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pyandor.delete_WhiteBalanceInfo
    __del__ = lambda self : None;
WhiteBalanceInfo_swigregister = _pyandor.WhiteBalanceInfo_swigregister
WhiteBalanceInfo_swigregister(WhiteBalanceInfo)


def AbortAcquisition():
  return _pyandor.AbortAcquisition()
AbortAcquisition = _pyandor.AbortAcquisition

def CancelWait():
  return _pyandor.CancelWait()
CancelWait = _pyandor.CancelWait

def CoolerOFF():
  return _pyandor.CoolerOFF()
CoolerOFF = _pyandor.CoolerOFF

def CoolerON():
  return _pyandor.CoolerON()
CoolerON = _pyandor.CoolerON

def DemosaicImage(*args):
  return _pyandor.DemosaicImage(*args)
DemosaicImage = _pyandor.DemosaicImage

def EnableKeepCleans(*args):
  return _pyandor.EnableKeepCleans(*args)
EnableKeepCleans = _pyandor.EnableKeepCleans

def FreeInternalMemory():
  return _pyandor.FreeInternalMemory()
FreeInternalMemory = _pyandor.FreeInternalMemory

def GetAcquiredData(*args):
  return _pyandor.GetAcquiredData(*args)
GetAcquiredData = _pyandor.GetAcquiredData

def GetAcquiredData16(*args):
  return _pyandor.GetAcquiredData16(*args)
GetAcquiredData16 = _pyandor.GetAcquiredData16

def GetAcquiredFloatData(*args):
  return _pyandor.GetAcquiredFloatData(*args)
GetAcquiredFloatData = _pyandor.GetAcquiredFloatData

def GetAcquisitionProgress(*args):
  return _pyandor.GetAcquisitionProgress(*args)
GetAcquisitionProgress = _pyandor.GetAcquisitionProgress

def GetAcquisitionTimings(*args):
  return _pyandor.GetAcquisitionTimings(*args)
GetAcquisitionTimings = _pyandor.GetAcquisitionTimings

def GetAdjustedRingExposureTimes(*args):
  return _pyandor.GetAdjustedRingExposureTimes(*args)
GetAdjustedRingExposureTimes = _pyandor.GetAdjustedRingExposureTimes

def GetAllDMAData(*args):
  return _pyandor.GetAllDMAData(*args)
GetAllDMAData = _pyandor.GetAllDMAData

def GetAmpDesc(*args):
  return _pyandor.GetAmpDesc(*args)
GetAmpDesc = _pyandor.GetAmpDesc

def GetAmpMaxSpeed(*args):
  return _pyandor.GetAmpMaxSpeed(*args)
GetAmpMaxSpeed = _pyandor.GetAmpMaxSpeed

def GetAvailableCameras(*args):
  return _pyandor.GetAvailableCameras(*args)
GetAvailableCameras = _pyandor.GetAvailableCameras

def GetBackground(*args):
  return _pyandor.GetBackground(*args)
GetBackground = _pyandor.GetBackground

def GetBaselineClamp(*args):
  return _pyandor.GetBaselineClamp(*args)
GetBaselineClamp = _pyandor.GetBaselineClamp

def GetBitDepth(*args):
  return _pyandor.GetBitDepth(*args)
GetBitDepth = _pyandor.GetBitDepth

def GetCameraHandle(*args):
  return _pyandor.GetCameraHandle(*args)
GetCameraHandle = _pyandor.GetCameraHandle

def GetCameraInformation(*args):
  return _pyandor.GetCameraInformation(*args)
GetCameraInformation = _pyandor.GetCameraInformation

def GetCameraSerialNumber(*args):
  return _pyandor.GetCameraSerialNumber(*args)
GetCameraSerialNumber = _pyandor.GetCameraSerialNumber

def GetCapabilities(*args):
  return _pyandor.GetCapabilities(*args)
GetCapabilities = _pyandor.GetCapabilities

def GetControllerCardModel(*args):
  return _pyandor.GetControllerCardModel(*args)
GetControllerCardModel = _pyandor.GetControllerCardModel

def GetCountConvertWavelengthRange(*args):
  return _pyandor.GetCountConvertWavelengthRange(*args)
GetCountConvertWavelengthRange = _pyandor.GetCountConvertWavelengthRange

def GetCurrentCamera(*args):
  return _pyandor.GetCurrentCamera(*args)
GetCurrentCamera = _pyandor.GetCurrentCamera

def GetCYMGShift(*args):
  return _pyandor.GetCYMGShift(*args)
GetCYMGShift = _pyandor.GetCYMGShift

def GetDDGExternalOutputEnabled(*args):
  return _pyandor.GetDDGExternalOutputEnabled(*args)
GetDDGExternalOutputEnabled = _pyandor.GetDDGExternalOutputEnabled

def GetDDGExternalOutputPolarity(*args):
  return _pyandor.GetDDGExternalOutputPolarity(*args)
GetDDGExternalOutputPolarity = _pyandor.GetDDGExternalOutputPolarity

def GetDDGExternalOutputStepEnabled(*args):
  return _pyandor.GetDDGExternalOutputStepEnabled(*args)
GetDDGExternalOutputStepEnabled = _pyandor.GetDDGExternalOutputStepEnabled

def GetDDGExternalOutputTime(*args):
  return _pyandor.GetDDGExternalOutputTime(*args)
GetDDGExternalOutputTime = _pyandor.GetDDGExternalOutputTime

def GetDDGTTLGateWidth(*args):
  return _pyandor.GetDDGTTLGateWidth(*args)
GetDDGTTLGateWidth = _pyandor.GetDDGTTLGateWidth

def GetDDGGateTime(*args):
  return _pyandor.GetDDGGateTime(*args)
GetDDGGateTime = _pyandor.GetDDGGateTime

def GetDDGInsertionDelay(*args):
  return _pyandor.GetDDGInsertionDelay(*args)
GetDDGInsertionDelay = _pyandor.GetDDGInsertionDelay

def GetDDGIntelligate(*args):
  return _pyandor.GetDDGIntelligate(*args)
GetDDGIntelligate = _pyandor.GetDDGIntelligate

def GetDDGIOC(*args):
  return _pyandor.GetDDGIOC(*args)
GetDDGIOC = _pyandor.GetDDGIOC

def GetDDGIOCFrequency(*args):
  return _pyandor.GetDDGIOCFrequency(*args)
GetDDGIOCFrequency = _pyandor.GetDDGIOCFrequency

def GetDDGIOCNumber(*args):
  return _pyandor.GetDDGIOCNumber(*args)
GetDDGIOCNumber = _pyandor.GetDDGIOCNumber

def GetDDGIOCNumberRequested(*args):
  return _pyandor.GetDDGIOCNumberRequested(*args)
GetDDGIOCNumberRequested = _pyandor.GetDDGIOCNumberRequested

def GetDDGIOCPeriod(*args):
  return _pyandor.GetDDGIOCPeriod(*args)
GetDDGIOCPeriod = _pyandor.GetDDGIOCPeriod

def GetDDGIOCPulses(*args):
  return _pyandor.GetDDGIOCPulses(*args)
GetDDGIOCPulses = _pyandor.GetDDGIOCPulses

def GetDDGIOCTrigger(*args):
  return _pyandor.GetDDGIOCTrigger(*args)
GetDDGIOCTrigger = _pyandor.GetDDGIOCTrigger

def GetDDGOpticalWidthEnabled(*args):
  return _pyandor.GetDDGOpticalWidthEnabled(*args)
GetDDGOpticalWidthEnabled = _pyandor.GetDDGOpticalWidthEnabled

def GetDDGLiteGlobalControlByte(*args):
  return _pyandor.GetDDGLiteGlobalControlByte(*args)
GetDDGLiteGlobalControlByte = _pyandor.GetDDGLiteGlobalControlByte

def GetDDGLiteControlByte(*args):
  return _pyandor.GetDDGLiteControlByte(*args)
GetDDGLiteControlByte = _pyandor.GetDDGLiteControlByte

def GetDDGLiteInitialDelay(*args):
  return _pyandor.GetDDGLiteInitialDelay(*args)
GetDDGLiteInitialDelay = _pyandor.GetDDGLiteInitialDelay

def GetDDGLitePulseWidth(*args):
  return _pyandor.GetDDGLitePulseWidth(*args)
GetDDGLitePulseWidth = _pyandor.GetDDGLitePulseWidth

def GetDDGLiteInterPulseDelay(*args):
  return _pyandor.GetDDGLiteInterPulseDelay(*args)
GetDDGLiteInterPulseDelay = _pyandor.GetDDGLiteInterPulseDelay

def GetDDGLitePulsesPerExposure(*args):
  return _pyandor.GetDDGLitePulsesPerExposure(*args)
GetDDGLitePulsesPerExposure = _pyandor.GetDDGLitePulsesPerExposure

def GetDDGPulse(*args):
  return _pyandor.GetDDGPulse(*args)
GetDDGPulse = _pyandor.GetDDGPulse

def GetDDGStepCoefficients(*args):
  return _pyandor.GetDDGStepCoefficients(*args)
GetDDGStepCoefficients = _pyandor.GetDDGStepCoefficients

def GetDDGStepMode(*args):
  return _pyandor.GetDDGStepMode(*args)
GetDDGStepMode = _pyandor.GetDDGStepMode

def GetDetector(*args):
  return _pyandor.GetDetector(*args)
GetDetector = _pyandor.GetDetector

def GetDICameraInfo(*args):
  return _pyandor.GetDICameraInfo(*args)
GetDICameraInfo = _pyandor.GetDICameraInfo

def GetEMAdvanced(*args):
  return _pyandor.GetEMAdvanced(*args)
GetEMAdvanced = _pyandor.GetEMAdvanced

def GetEMCCDGain(*args):
  return _pyandor.GetEMCCDGain(*args)
GetEMCCDGain = _pyandor.GetEMCCDGain

def GetEMGainRange(*args):
  return _pyandor.GetEMGainRange(*args)
GetEMGainRange = _pyandor.GetEMGainRange

def GetExternalTriggerTermination(*args):
  return _pyandor.GetExternalTriggerTermination(*args)
GetExternalTriggerTermination = _pyandor.GetExternalTriggerTermination

def GetFastestRecommendedVSSpeed(*args):
  return _pyandor.GetFastestRecommendedVSSpeed(*args)
GetFastestRecommendedVSSpeed = _pyandor.GetFastestRecommendedVSSpeed

def GetFIFOUsage(*args):
  return _pyandor.GetFIFOUsage(*args)
GetFIFOUsage = _pyandor.GetFIFOUsage

def GetFilterMode(*args):
  return _pyandor.GetFilterMode(*args)
GetFilterMode = _pyandor.GetFilterMode

def GetFKExposureTime(*args):
  return _pyandor.GetFKExposureTime(*args)
GetFKExposureTime = _pyandor.GetFKExposureTime

def GetFKVShiftSpeed(*args):
  return _pyandor.GetFKVShiftSpeed(*args)
GetFKVShiftSpeed = _pyandor.GetFKVShiftSpeed

def GetFKVShiftSpeedF(*args):
  return _pyandor.GetFKVShiftSpeedF(*args)
GetFKVShiftSpeedF = _pyandor.GetFKVShiftSpeedF

def GetFrontEndStatus(*args):
  return _pyandor.GetFrontEndStatus(*args)
GetFrontEndStatus = _pyandor.GetFrontEndStatus

def GetGateMode(*args):
  return _pyandor.GetGateMode(*args)
GetGateMode = _pyandor.GetGateMode

def GetHardwareVersion(*args):
  return _pyandor.GetHardwareVersion(*args)
GetHardwareVersion = _pyandor.GetHardwareVersion

def GetHeadModel(*args):
  return _pyandor.GetHeadModel(*args)
GetHeadModel = _pyandor.GetHeadModel

def GetHorizontalSpeed(*args):
  return _pyandor.GetHorizontalSpeed(*args)
GetHorizontalSpeed = _pyandor.GetHorizontalSpeed

def GetHSSpeed(*args):
  return _pyandor.GetHSSpeed(*args)
GetHSSpeed = _pyandor.GetHSSpeed

def GetHVflag(*args):
  return _pyandor.GetHVflag(*args)
GetHVflag = _pyandor.GetHVflag

def GetID(*args):
  return _pyandor.GetID(*args)
GetID = _pyandor.GetID

def GetImageFlip(*args):
  return _pyandor.GetImageFlip(*args)
GetImageFlip = _pyandor.GetImageFlip

def GetImageRotate(*args):
  return _pyandor.GetImageRotate(*args)
GetImageRotate = _pyandor.GetImageRotate

def GetImages(*args):
  return _pyandor.GetImages(*args)
GetImages = _pyandor.GetImages

def GetImages16(*args):
  return _pyandor.GetImages16(*args)
GetImages16 = _pyandor.GetImages16

def GetImagesPerDMA(*args):
  return _pyandor.GetImagesPerDMA(*args)
GetImagesPerDMA = _pyandor.GetImagesPerDMA

def GetIRQ(*args):
  return _pyandor.GetIRQ(*args)
GetIRQ = _pyandor.GetIRQ

def GetKeepCleanTime(*args):
  return _pyandor.GetKeepCleanTime(*args)
GetKeepCleanTime = _pyandor.GetKeepCleanTime

def GetMaximumBinning(*args):
  return _pyandor.GetMaximumBinning(*args)
GetMaximumBinning = _pyandor.GetMaximumBinning

def GetMaximumExposure(*args):
  return _pyandor.GetMaximumExposure(*args)
GetMaximumExposure = _pyandor.GetMaximumExposure

def GetMaximumNumberRingExposureTimes(*args):
  return _pyandor.GetMaximumNumberRingExposureTimes(*args)
GetMaximumNumberRingExposureTimes = _pyandor.GetMaximumNumberRingExposureTimes

def GetMCPGain(*args):
  return _pyandor.GetMCPGain(*args)
GetMCPGain = _pyandor.GetMCPGain

def GetMCPGainRange(*args):
  return _pyandor.GetMCPGainRange(*args)
GetMCPGainRange = _pyandor.GetMCPGainRange

def GetMCPGainTable(*args):
  return _pyandor.GetMCPGainTable(*args)
GetMCPGainTable = _pyandor.GetMCPGainTable

def GetMCPVoltage(*args):
  return _pyandor.GetMCPVoltage(*args)
GetMCPVoltage = _pyandor.GetMCPVoltage

def GetMinimumImageLength(*args):
  return _pyandor.GetMinimumImageLength(*args)
GetMinimumImageLength = _pyandor.GetMinimumImageLength

def GetMinimumNumberInSeries(*args):
  return _pyandor.GetMinimumNumberInSeries(*args)
GetMinimumNumberInSeries = _pyandor.GetMinimumNumberInSeries

def GetMostRecentColorImage16(*args):
  return _pyandor.GetMostRecentColorImage16(*args)
GetMostRecentColorImage16 = _pyandor.GetMostRecentColorImage16

def GetMostRecentImage(*args):
  return _pyandor.GetMostRecentImage(*args)
GetMostRecentImage = _pyandor.GetMostRecentImage

def GetMostRecentImage16(*args):
  return _pyandor.GetMostRecentImage16(*args)
GetMostRecentImage16 = _pyandor.GetMostRecentImage16

def GetNewData(*args):
  return _pyandor.GetNewData(*args)
GetNewData = _pyandor.GetNewData

def GetNewData16(*args):
  return _pyandor.GetNewData16(*args)
GetNewData16 = _pyandor.GetNewData16

def GetNewData8(*args):
  return _pyandor.GetNewData8(*args)
GetNewData8 = _pyandor.GetNewData8

def GetNewFloatData(*args):
  return _pyandor.GetNewFloatData(*args)
GetNewFloatData = _pyandor.GetNewFloatData

def GetNumberADChannels(*args):
  return _pyandor.GetNumberADChannels(*args)
GetNumberADChannels = _pyandor.GetNumberADChannels

def GetNumberAmp(*args):
  return _pyandor.GetNumberAmp(*args)
GetNumberAmp = _pyandor.GetNumberAmp

def GetNumberAvailableImages(*args):
  return _pyandor.GetNumberAvailableImages(*args)
GetNumberAvailableImages = _pyandor.GetNumberAvailableImages

def GetNumberDDGExternalOutputs(*args):
  return _pyandor.GetNumberDDGExternalOutputs(*args)
GetNumberDDGExternalOutputs = _pyandor.GetNumberDDGExternalOutputs

def GetNumberDevices(*args):
  return _pyandor.GetNumberDevices(*args)
GetNumberDevices = _pyandor.GetNumberDevices

def GetNumberFKVShiftSpeeds(*args):
  return _pyandor.GetNumberFKVShiftSpeeds(*args)
GetNumberFKVShiftSpeeds = _pyandor.GetNumberFKVShiftSpeeds

def GetNumberHorizontalSpeeds(*args):
  return _pyandor.GetNumberHorizontalSpeeds(*args)
GetNumberHorizontalSpeeds = _pyandor.GetNumberHorizontalSpeeds

def GetNumberHSSpeeds(*args):
  return _pyandor.GetNumberHSSpeeds(*args)
GetNumberHSSpeeds = _pyandor.GetNumberHSSpeeds

def GetNumberNewImages(*args):
  return _pyandor.GetNumberNewImages(*args)
GetNumberNewImages = _pyandor.GetNumberNewImages

def GetNumberPhotonCountingDivisions(*args):
  return _pyandor.GetNumberPhotonCountingDivisions(*args)
GetNumberPhotonCountingDivisions = _pyandor.GetNumberPhotonCountingDivisions

def GetNumberPreAmpGains(*args):
  return _pyandor.GetNumberPreAmpGains(*args)
GetNumberPreAmpGains = _pyandor.GetNumberPreAmpGains

def GetNumberRingExposureTimes(*args):
  return _pyandor.GetNumberRingExposureTimes(*args)
GetNumberRingExposureTimes = _pyandor.GetNumberRingExposureTimes

def GetNumberIO(*args):
  return _pyandor.GetNumberIO(*args)
GetNumberIO = _pyandor.GetNumberIO

def GetNumberVerticalSpeeds(*args):
  return _pyandor.GetNumberVerticalSpeeds(*args)
GetNumberVerticalSpeeds = _pyandor.GetNumberVerticalSpeeds

def GetNumberVSAmplitudes(*args):
  return _pyandor.GetNumberVSAmplitudes(*args)
GetNumberVSAmplitudes = _pyandor.GetNumberVSAmplitudes

def GetNumberVSSpeeds(*args):
  return _pyandor.GetNumberVSSpeeds(*args)
GetNumberVSSpeeds = _pyandor.GetNumberVSSpeeds

def GetOldestImage(*args):
  return _pyandor.GetOldestImage(*args)
GetOldestImage = _pyandor.GetOldestImage

def GetOldestImage16(*args):
  return _pyandor.GetOldestImage16(*args)
GetOldestImage16 = _pyandor.GetOldestImage16

def GetPhosphorStatus(*args):
  return _pyandor.GetPhosphorStatus(*args)
GetPhosphorStatus = _pyandor.GetPhosphorStatus

def GetPhysicalDMAAddress(*args):
  return _pyandor.GetPhysicalDMAAddress(*args)
GetPhysicalDMAAddress = _pyandor.GetPhysicalDMAAddress

def GetPixelSize(*args):
  return _pyandor.GetPixelSize(*args)
GetPixelSize = _pyandor.GetPixelSize

def GetPreAmpGain(*args):
  return _pyandor.GetPreAmpGain(*args)
GetPreAmpGain = _pyandor.GetPreAmpGain

def GetPreAmpGainText(*args):
  return _pyandor.GetPreAmpGainText(*args)
GetPreAmpGainText = _pyandor.GetPreAmpGainText

def GetDualExposureTimes(*args):
  return _pyandor.GetDualExposureTimes(*args)
GetDualExposureTimes = _pyandor.GetDualExposureTimes

def GetQE(*args):
  return _pyandor.GetQE(*args)
GetQE = _pyandor.GetQE

def GetReadOutTime(*args):
  return _pyandor.GetReadOutTime(*args)
GetReadOutTime = _pyandor.GetReadOutTime

def GetRegisterDump(*args):
  return _pyandor.GetRegisterDump(*args)
GetRegisterDump = _pyandor.GetRegisterDump

def GetRingExposureRange(*args):
  return _pyandor.GetRingExposureRange(*args)
GetRingExposureRange = _pyandor.GetRingExposureRange

def GetSDK3Handle(*args):
  return _pyandor.GetSDK3Handle(*args)
GetSDK3Handle = _pyandor.GetSDK3Handle

def GetSensitivity(*args):
  return _pyandor.GetSensitivity(*args)
GetSensitivity = _pyandor.GetSensitivity

def GetShutterMinTimes(*args):
  return _pyandor.GetShutterMinTimes(*args)
GetShutterMinTimes = _pyandor.GetShutterMinTimes

def GetSizeOfCircularBuffer(*args):
  return _pyandor.GetSizeOfCircularBuffer(*args)
GetSizeOfCircularBuffer = _pyandor.GetSizeOfCircularBuffer

def GetSlotBusDeviceFunction(*args):
  return _pyandor.GetSlotBusDeviceFunction(*args)
GetSlotBusDeviceFunction = _pyandor.GetSlotBusDeviceFunction

def GetSoftwareVersion(*args):
  return _pyandor.GetSoftwareVersion(*args)
GetSoftwareVersion = _pyandor.GetSoftwareVersion

def GetSpoolProgress(*args):
  return _pyandor.GetSpoolProgress(*args)
GetSpoolProgress = _pyandor.GetSpoolProgress

def GetStartUpTime(*args):
  return _pyandor.GetStartUpTime(*args)
GetStartUpTime = _pyandor.GetStartUpTime

def GetStatus(*args):
  return _pyandor.GetStatus(*args)
GetStatus = _pyandor.GetStatus

def GetTECStatus(*args):
  return _pyandor.GetTECStatus(*args)
GetTECStatus = _pyandor.GetTECStatus

def GetTemperature(*args):
  return _pyandor.GetTemperature(*args)
GetTemperature = _pyandor.GetTemperature

def GetTemperatureF(*args):
  return _pyandor.GetTemperatureF(*args)
GetTemperatureF = _pyandor.GetTemperatureF

def GetTemperatureRange(*args):
  return _pyandor.GetTemperatureRange(*args)
GetTemperatureRange = _pyandor.GetTemperatureRange

def GetTemperatureStatus(*args):
  return _pyandor.GetTemperatureStatus(*args)
GetTemperatureStatus = _pyandor.GetTemperatureStatus

def GetTotalNumberImagesAcquired(*args):
  return _pyandor.GetTotalNumberImagesAcquired(*args)
GetTotalNumberImagesAcquired = _pyandor.GetTotalNumberImagesAcquired

def GetIODirection(*args):
  return _pyandor.GetIODirection(*args)
GetIODirection = _pyandor.GetIODirection

def GetIOLevel(*args):
  return _pyandor.GetIOLevel(*args)
GetIOLevel = _pyandor.GetIOLevel

def GetVersionInfo(*args):
  return _pyandor.GetVersionInfo(*args)
GetVersionInfo = _pyandor.GetVersionInfo

def GetVerticalSpeed(*args):
  return _pyandor.GetVerticalSpeed(*args)
GetVerticalSpeed = _pyandor.GetVerticalSpeed

def GetVirtualDMAAddress(*args):
  return _pyandor.GetVirtualDMAAddress(*args)
GetVirtualDMAAddress = _pyandor.GetVirtualDMAAddress

def GetVSAmplitudeString(*args):
  return _pyandor.GetVSAmplitudeString(*args)
GetVSAmplitudeString = _pyandor.GetVSAmplitudeString

def GetVSAmplitudeFromString(*args):
  return _pyandor.GetVSAmplitudeFromString(*args)
GetVSAmplitudeFromString = _pyandor.GetVSAmplitudeFromString

def GetVSAmplitudeValue(*args):
  return _pyandor.GetVSAmplitudeValue(*args)
GetVSAmplitudeValue = _pyandor.GetVSAmplitudeValue

def GetVSSpeed(*args):
  return _pyandor.GetVSSpeed(*args)
GetVSSpeed = _pyandor.GetVSSpeed

def GPIBReceive(*args):
  return _pyandor.GPIBReceive(*args)
GPIBReceive = _pyandor.GPIBReceive

def GPIBSend(*args):
  return _pyandor.GPIBSend(*args)
GPIBSend = _pyandor.GPIBSend

def I2CBurstRead(*args):
  return _pyandor.I2CBurstRead(*args)
I2CBurstRead = _pyandor.I2CBurstRead

def I2CBurstWrite(*args):
  return _pyandor.I2CBurstWrite(*args)
I2CBurstWrite = _pyandor.I2CBurstWrite

def I2CRead(*args):
  return _pyandor.I2CRead(*args)
I2CRead = _pyandor.I2CRead

def I2CReset():
  return _pyandor.I2CReset()
I2CReset = _pyandor.I2CReset

def I2CWrite(*args):
  return _pyandor.I2CWrite(*args)
I2CWrite = _pyandor.I2CWrite

def IdAndorDll():
  return _pyandor.IdAndorDll()
IdAndorDll = _pyandor.IdAndorDll

def InAuxPort(*args):
  return _pyandor.InAuxPort(*args)
InAuxPort = _pyandor.InAuxPort

def Initialize(*args):
  return _pyandor.Initialize(*args)
Initialize = _pyandor.Initialize

def InitializeDevice(*args):
  return _pyandor.InitializeDevice(*args)
InitializeDevice = _pyandor.InitializeDevice

def IsAmplifierAvailable(*args):
  return _pyandor.IsAmplifierAvailable(*args)
IsAmplifierAvailable = _pyandor.IsAmplifierAvailable

def IsCoolerOn(*args):
  return _pyandor.IsCoolerOn(*args)
IsCoolerOn = _pyandor.IsCoolerOn

def IsCountConvertModeAvailable(*args):
  return _pyandor.IsCountConvertModeAvailable(*args)
IsCountConvertModeAvailable = _pyandor.IsCountConvertModeAvailable

def IsInternalMechanicalShutter(*args):
  return _pyandor.IsInternalMechanicalShutter(*args)
IsInternalMechanicalShutter = _pyandor.IsInternalMechanicalShutter

def IsPreAmpGainAvailable(*args):
  return _pyandor.IsPreAmpGainAvailable(*args)
IsPreAmpGainAvailable = _pyandor.IsPreAmpGainAvailable

def IsTriggerModeAvailable(*args):
  return _pyandor.IsTriggerModeAvailable(*args)
IsTriggerModeAvailable = _pyandor.IsTriggerModeAvailable

def Merge(*args):
  return _pyandor.Merge(*args)
Merge = _pyandor.Merge

def OutAuxPort(*args):
  return _pyandor.OutAuxPort(*args)
OutAuxPort = _pyandor.OutAuxPort

def PrepareAcquisition():
  return _pyandor.PrepareAcquisition()
PrepareAcquisition = _pyandor.PrepareAcquisition

def SaveAsBmp(*args):
  return _pyandor.SaveAsBmp(*args)
SaveAsBmp = _pyandor.SaveAsBmp

def SaveAsCommentedSif(*args):
  return _pyandor.SaveAsCommentedSif(*args)
SaveAsCommentedSif = _pyandor.SaveAsCommentedSif

def SaveAsEDF(*args):
  return _pyandor.SaveAsEDF(*args)
SaveAsEDF = _pyandor.SaveAsEDF

def SaveAsFITS(*args):
  return _pyandor.SaveAsFITS(*args)
SaveAsFITS = _pyandor.SaveAsFITS

def SaveAsRaw(*args):
  return _pyandor.SaveAsRaw(*args)
SaveAsRaw = _pyandor.SaveAsRaw

def SaveAsSif(*args):
  return _pyandor.SaveAsSif(*args)
SaveAsSif = _pyandor.SaveAsSif

def SaveAsTiff(*args):
  return _pyandor.SaveAsTiff(*args)
SaveAsTiff = _pyandor.SaveAsTiff

def SaveAsTiffEx(*args):
  return _pyandor.SaveAsTiffEx(*args)
SaveAsTiffEx = _pyandor.SaveAsTiffEx

def SaveEEPROMToFile(*args):
  return _pyandor.SaveEEPROMToFile(*args)
SaveEEPROMToFile = _pyandor.SaveEEPROMToFile

def SaveToClipBoard(*args):
  return _pyandor.SaveToClipBoard(*args)
SaveToClipBoard = _pyandor.SaveToClipBoard

def SelectDevice(*args):
  return _pyandor.SelectDevice(*args)
SelectDevice = _pyandor.SelectDevice

def SendSoftwareTrigger():
  return _pyandor.SendSoftwareTrigger()
SendSoftwareTrigger = _pyandor.SendSoftwareTrigger

def SetAccumulationCycleTime(*args):
  return _pyandor.SetAccumulationCycleTime(*args)
SetAccumulationCycleTime = _pyandor.SetAccumulationCycleTime

def SetAcquisitionMode(*args):
  return _pyandor.SetAcquisitionMode(*args)
SetAcquisitionMode = _pyandor.SetAcquisitionMode

def SetAcquisitionType(*args):
  return _pyandor.SetAcquisitionType(*args)
SetAcquisitionType = _pyandor.SetAcquisitionType

def SetADChannel(*args):
  return _pyandor.SetADChannel(*args)
SetADChannel = _pyandor.SetADChannel

def SetAdvancedTriggerModeState(*args):
  return _pyandor.SetAdvancedTriggerModeState(*args)
SetAdvancedTriggerModeState = _pyandor.SetAdvancedTriggerModeState

def SetBackground(*args):
  return _pyandor.SetBackground(*args)
SetBackground = _pyandor.SetBackground

def SetBaselineClamp(*args):
  return _pyandor.SetBaselineClamp(*args)
SetBaselineClamp = _pyandor.SetBaselineClamp

def SetBaselineOffset(*args):
  return _pyandor.SetBaselineOffset(*args)
SetBaselineOffset = _pyandor.SetBaselineOffset

def SetCameraLinkMode(*args):
  return _pyandor.SetCameraLinkMode(*args)
SetCameraLinkMode = _pyandor.SetCameraLinkMode

def SetCameraStatusEnable(*args):
  return _pyandor.SetCameraStatusEnable(*args)
SetCameraStatusEnable = _pyandor.SetCameraStatusEnable

def SetChargeShifting(*args):
  return _pyandor.SetChargeShifting(*args)
SetChargeShifting = _pyandor.SetChargeShifting

def SetComplexImage(*args):
  return _pyandor.SetComplexImage(*args)
SetComplexImage = _pyandor.SetComplexImage

def SetCoolerMode(*args):
  return _pyandor.SetCoolerMode(*args)
SetCoolerMode = _pyandor.SetCoolerMode

def SetCountConvertMode(*args):
  return _pyandor.SetCountConvertMode(*args)
SetCountConvertMode = _pyandor.SetCountConvertMode

def SetCountConvertWavelength(*args):
  return _pyandor.SetCountConvertWavelength(*args)
SetCountConvertWavelength = _pyandor.SetCountConvertWavelength

def SetCropMode(*args):
  return _pyandor.SetCropMode(*args)
SetCropMode = _pyandor.SetCropMode

def SetCurrentCamera(*args):
  return _pyandor.SetCurrentCamera(*args)
SetCurrentCamera = _pyandor.SetCurrentCamera

def SetCustomTrackHBin(*args):
  return _pyandor.SetCustomTrackHBin(*args)
SetCustomTrackHBin = _pyandor.SetCustomTrackHBin

def SetDataType(*args):
  return _pyandor.SetDataType(*args)
SetDataType = _pyandor.SetDataType

def SetDACOutput(*args):
  return _pyandor.SetDACOutput(*args)
SetDACOutput = _pyandor.SetDACOutput

def SetDACOutputScale(*args):
  return _pyandor.SetDACOutputScale(*args)
SetDACOutputScale = _pyandor.SetDACOutputScale

def SetDDGAddress(*args):
  return _pyandor.SetDDGAddress(*args)
SetDDGAddress = _pyandor.SetDDGAddress

def SetDDGExternalOutputEnabled(*args):
  return _pyandor.SetDDGExternalOutputEnabled(*args)
SetDDGExternalOutputEnabled = _pyandor.SetDDGExternalOutputEnabled

def SetDDGExternalOutputPolarity(*args):
  return _pyandor.SetDDGExternalOutputPolarity(*args)
SetDDGExternalOutputPolarity = _pyandor.SetDDGExternalOutputPolarity

def SetDDGExternalOutputStepEnabled(*args):
  return _pyandor.SetDDGExternalOutputStepEnabled(*args)
SetDDGExternalOutputStepEnabled = _pyandor.SetDDGExternalOutputStepEnabled

def SetDDGExternalOutputTime(*args):
  return _pyandor.SetDDGExternalOutputTime(*args)
SetDDGExternalOutputTime = _pyandor.SetDDGExternalOutputTime

def SetDDGGain(*args):
  return _pyandor.SetDDGGain(*args)
SetDDGGain = _pyandor.SetDDGGain

def SetDDGGateStep(*args):
  return _pyandor.SetDDGGateStep(*args)
SetDDGGateStep = _pyandor.SetDDGGateStep

def SetDDGGateTime(*args):
  return _pyandor.SetDDGGateTime(*args)
SetDDGGateTime = _pyandor.SetDDGGateTime

def SetDDGInsertionDelay(*args):
  return _pyandor.SetDDGInsertionDelay(*args)
SetDDGInsertionDelay = _pyandor.SetDDGInsertionDelay

def SetDDGIntelligate(*args):
  return _pyandor.SetDDGIntelligate(*args)
SetDDGIntelligate = _pyandor.SetDDGIntelligate

def SetDDGIOC(*args):
  return _pyandor.SetDDGIOC(*args)
SetDDGIOC = _pyandor.SetDDGIOC

def SetDDGIOCFrequency(*args):
  return _pyandor.SetDDGIOCFrequency(*args)
SetDDGIOCFrequency = _pyandor.SetDDGIOCFrequency

def SetDDGIOCNumber(*args):
  return _pyandor.SetDDGIOCNumber(*args)
SetDDGIOCNumber = _pyandor.SetDDGIOCNumber

def SetDDGIOCPeriod(*args):
  return _pyandor.SetDDGIOCPeriod(*args)
SetDDGIOCPeriod = _pyandor.SetDDGIOCPeriod

def SetDDGIOCTrigger(*args):
  return _pyandor.SetDDGIOCTrigger(*args)
SetDDGIOCTrigger = _pyandor.SetDDGIOCTrigger

def SetDDGOpticalWidthEnabled(*args):
  return _pyandor.SetDDGOpticalWidthEnabled(*args)
SetDDGOpticalWidthEnabled = _pyandor.SetDDGOpticalWidthEnabled

def SetDDGLiteGlobalControlByte(*args):
  return _pyandor.SetDDGLiteGlobalControlByte(*args)
SetDDGLiteGlobalControlByte = _pyandor.SetDDGLiteGlobalControlByte

def SetDDGLiteControlByte(*args):
  return _pyandor.SetDDGLiteControlByte(*args)
SetDDGLiteControlByte = _pyandor.SetDDGLiteControlByte

def SetDDGLiteInitialDelay(*args):
  return _pyandor.SetDDGLiteInitialDelay(*args)
SetDDGLiteInitialDelay = _pyandor.SetDDGLiteInitialDelay

def SetDDGLitePulseWidth(*args):
  return _pyandor.SetDDGLitePulseWidth(*args)
SetDDGLitePulseWidth = _pyandor.SetDDGLitePulseWidth

def SetDDGLiteInterPulseDelay(*args):
  return _pyandor.SetDDGLiteInterPulseDelay(*args)
SetDDGLiteInterPulseDelay = _pyandor.SetDDGLiteInterPulseDelay

def SetDDGLitePulsesPerExposure(*args):
  return _pyandor.SetDDGLitePulsesPerExposure(*args)
SetDDGLitePulsesPerExposure = _pyandor.SetDDGLitePulsesPerExposure

def SetDDGStepCoefficients(*args):
  return _pyandor.SetDDGStepCoefficients(*args)
SetDDGStepCoefficients = _pyandor.SetDDGStepCoefficients

def SetDDGStepMode(*args):
  return _pyandor.SetDDGStepMode(*args)
SetDDGStepMode = _pyandor.SetDDGStepMode

def SetDDGTimes(*args):
  return _pyandor.SetDDGTimes(*args)
SetDDGTimes = _pyandor.SetDDGTimes

def SetDDGTriggerMode(*args):
  return _pyandor.SetDDGTriggerMode(*args)
SetDDGTriggerMode = _pyandor.SetDDGTriggerMode

def SetDDGVariableGateStep(*args):
  return _pyandor.SetDDGVariableGateStep(*args)
SetDDGVariableGateStep = _pyandor.SetDDGVariableGateStep

def SetDelayGenerator(*args):
  return _pyandor.SetDelayGenerator(*args)
SetDelayGenerator = _pyandor.SetDelayGenerator

def SetDMAParameters(*args):
  return _pyandor.SetDMAParameters(*args)
SetDMAParameters = _pyandor.SetDMAParameters

def SetEMAdvanced(*args):
  return _pyandor.SetEMAdvanced(*args)
SetEMAdvanced = _pyandor.SetEMAdvanced

def SetEMCCDGain(*args):
  return _pyandor.SetEMCCDGain(*args)
SetEMCCDGain = _pyandor.SetEMCCDGain

def SetEMClockCompensation(*args):
  return _pyandor.SetEMClockCompensation(*args)
SetEMClockCompensation = _pyandor.SetEMClockCompensation

def SetEMGainMode(*args):
  return _pyandor.SetEMGainMode(*args)
SetEMGainMode = _pyandor.SetEMGainMode

def SetExposureTime(*args):
  return _pyandor.SetExposureTime(*args)
SetExposureTime = _pyandor.SetExposureTime

def SetExternalTriggerTermination(*args):
  return _pyandor.SetExternalTriggerTermination(*args)
SetExternalTriggerTermination = _pyandor.SetExternalTriggerTermination

def SetFanMode(*args):
  return _pyandor.SetFanMode(*args)
SetFanMode = _pyandor.SetFanMode

def SetFastExtTrigger(*args):
  return _pyandor.SetFastExtTrigger(*args)
SetFastExtTrigger = _pyandor.SetFastExtTrigger

def SetFastKinetics(*args):
  return _pyandor.SetFastKinetics(*args)
SetFastKinetics = _pyandor.SetFastKinetics

def SetFastKineticsEx(*args):
  return _pyandor.SetFastKineticsEx(*args)
SetFastKineticsEx = _pyandor.SetFastKineticsEx

def SetFilterMode(*args):
  return _pyandor.SetFilterMode(*args)
SetFilterMode = _pyandor.SetFilterMode

def SetFilterParameters(*args):
  return _pyandor.SetFilterParameters(*args)
SetFilterParameters = _pyandor.SetFilterParameters

def SetFKVShiftSpeed(*args):
  return _pyandor.SetFKVShiftSpeed(*args)
SetFKVShiftSpeed = _pyandor.SetFKVShiftSpeed

def SetFPDP(*args):
  return _pyandor.SetFPDP(*args)
SetFPDP = _pyandor.SetFPDP

def SetFrameTransferMode(*args):
  return _pyandor.SetFrameTransferMode(*args)
SetFrameTransferMode = _pyandor.SetFrameTransferMode

def SetFullImage(*args):
  return _pyandor.SetFullImage(*args)
SetFullImage = _pyandor.SetFullImage

def SetFVBHBin(*args):
  return _pyandor.SetFVBHBin(*args)
SetFVBHBin = _pyandor.SetFVBHBin

def SetGain(*args):
  return _pyandor.SetGain(*args)
SetGain = _pyandor.SetGain

def SetGate(*args):
  return _pyandor.SetGate(*args)
SetGate = _pyandor.SetGate

def SetGateMode(*args):
  return _pyandor.SetGateMode(*args)
SetGateMode = _pyandor.SetGateMode

def SetHighCapacity(*args):
  return _pyandor.SetHighCapacity(*args)
SetHighCapacity = _pyandor.SetHighCapacity

def SetHorizontalSpeed(*args):
  return _pyandor.SetHorizontalSpeed(*args)
SetHorizontalSpeed = _pyandor.SetHorizontalSpeed

def SetHSSpeed(*args):
  return _pyandor.SetHSSpeed(*args)
SetHSSpeed = _pyandor.SetHSSpeed

def SetImage(*args):
  return _pyandor.SetImage(*args)
SetImage = _pyandor.SetImage

def SetImageFlip(*args):
  return _pyandor.SetImageFlip(*args)
SetImageFlip = _pyandor.SetImageFlip

def SetImageRotate(*args):
  return _pyandor.SetImageRotate(*args)
SetImageRotate = _pyandor.SetImageRotate

def SetIsolatedCropMode(*args):
  return _pyandor.SetIsolatedCropMode(*args)
SetIsolatedCropMode = _pyandor.SetIsolatedCropMode

def SetKineticCycleTime(*args):
  return _pyandor.SetKineticCycleTime(*args)
SetKineticCycleTime = _pyandor.SetKineticCycleTime

def SetMCPGain(*args):
  return _pyandor.SetMCPGain(*args)
SetMCPGain = _pyandor.SetMCPGain

def SetMCPGating(*args):
  return _pyandor.SetMCPGating(*args)
SetMCPGating = _pyandor.SetMCPGating

def SetMessageWindow(*args):
  return _pyandor.SetMessageWindow(*args)
SetMessageWindow = _pyandor.SetMessageWindow

def SetMetaData(*args):
  return _pyandor.SetMetaData(*args)
SetMetaData = _pyandor.SetMetaData

def SetMultiTrack(*args):
  return _pyandor.SetMultiTrack(*args)
SetMultiTrack = _pyandor.SetMultiTrack

def SetMultiTrackHBin(*args):
  return _pyandor.SetMultiTrackHBin(*args)
SetMultiTrackHBin = _pyandor.SetMultiTrackHBin

def SetMultiTrackHRange(*args):
  return _pyandor.SetMultiTrackHRange(*args)
SetMultiTrackHRange = _pyandor.SetMultiTrackHRange

def SetMultiTrackScan(*args):
  return _pyandor.SetMultiTrackScan(*args)
SetMultiTrackScan = _pyandor.SetMultiTrackScan

def SetNextAddress(*args):
  return _pyandor.SetNextAddress(*args)
SetNextAddress = _pyandor.SetNextAddress

def SetNumberAccumulations(*args):
  return _pyandor.SetNumberAccumulations(*args)
SetNumberAccumulations = _pyandor.SetNumberAccumulations

def SetNumberKinetics(*args):
  return _pyandor.SetNumberKinetics(*args)
SetNumberKinetics = _pyandor.SetNumberKinetics

def SetNumberPrescans(*args):
  return _pyandor.SetNumberPrescans(*args)
SetNumberPrescans = _pyandor.SetNumberPrescans

def SetOutputAmplifier(*args):
  return _pyandor.SetOutputAmplifier(*args)
SetOutputAmplifier = _pyandor.SetOutputAmplifier

def SetOverlapMode(*args):
  return _pyandor.SetOverlapMode(*args)
SetOverlapMode = _pyandor.SetOverlapMode

def SetPhotonCounting(*args):
  return _pyandor.SetPhotonCounting(*args)
SetPhotonCounting = _pyandor.SetPhotonCounting

def SetPhotonCountingThreshold(*args):
  return _pyandor.SetPhotonCountingThreshold(*args)
SetPhotonCountingThreshold = _pyandor.SetPhotonCountingThreshold

def SetPhotonCountingDivisions(*args):
  return _pyandor.SetPhotonCountingDivisions(*args)
SetPhotonCountingDivisions = _pyandor.SetPhotonCountingDivisions

def SetPixelMode(*args):
  return _pyandor.SetPixelMode(*args)
SetPixelMode = _pyandor.SetPixelMode

def SetPreAmpGain(*args):
  return _pyandor.SetPreAmpGain(*args)
SetPreAmpGain = _pyandor.SetPreAmpGain

def SetDualExposureTimes(*args):
  return _pyandor.SetDualExposureTimes(*args)
SetDualExposureTimes = _pyandor.SetDualExposureTimes

def SetDualExposureMode(*args):
  return _pyandor.SetDualExposureMode(*args)
SetDualExposureMode = _pyandor.SetDualExposureMode

def SetRandomTracks(*args):
  return _pyandor.SetRandomTracks(*args)
SetRandomTracks = _pyandor.SetRandomTracks

def SetReadMode(*args):
  return _pyandor.SetReadMode(*args)
SetReadMode = _pyandor.SetReadMode

def SetReadoutRegisterPacking(*args):
  return _pyandor.SetReadoutRegisterPacking(*args)
SetReadoutRegisterPacking = _pyandor.SetReadoutRegisterPacking

def SetRegisterDump(*args):
  return _pyandor.SetRegisterDump(*args)
SetRegisterDump = _pyandor.SetRegisterDump

def SetRingExposureTimes(*args):
  return _pyandor.SetRingExposureTimes(*args)
SetRingExposureTimes = _pyandor.SetRingExposureTimes

def SetShutter(*args):
  return _pyandor.SetShutter(*args)
SetShutter = _pyandor.SetShutter

def SetShutterEx(*args):
  return _pyandor.SetShutterEx(*args)
SetShutterEx = _pyandor.SetShutterEx

def SetShutters(*args):
  return _pyandor.SetShutters(*args)
SetShutters = _pyandor.SetShutters

def SetSifComment(*args):
  return _pyandor.SetSifComment(*args)
SetSifComment = _pyandor.SetSifComment

def SetSingleTrack(*args):
  return _pyandor.SetSingleTrack(*args)
SetSingleTrack = _pyandor.SetSingleTrack

def SetSingleTrackHBin(*args):
  return _pyandor.SetSingleTrackHBin(*args)
SetSingleTrackHBin = _pyandor.SetSingleTrackHBin

def SetSpool(*args):
  return _pyandor.SetSpool(*args)
SetSpool = _pyandor.SetSpool

def SetSpoolThreadCount(*args):
  return _pyandor.SetSpoolThreadCount(*args)
SetSpoolThreadCount = _pyandor.SetSpoolThreadCount

def SetStorageMode(*args):
  return _pyandor.SetStorageMode(*args)
SetStorageMode = _pyandor.SetStorageMode

def SetTemperature(*args):
  return _pyandor.SetTemperature(*args)
SetTemperature = _pyandor.SetTemperature

def SetTriggerMode(*args):
  return _pyandor.SetTriggerMode(*args)
SetTriggerMode = _pyandor.SetTriggerMode

def SetTriggerInvert(*args):
  return _pyandor.SetTriggerInvert(*args)
SetTriggerInvert = _pyandor.SetTriggerInvert

def GetTriggerLevelRange(*args):
  return _pyandor.GetTriggerLevelRange(*args)
GetTriggerLevelRange = _pyandor.GetTriggerLevelRange

def SetTriggerLevel(*args):
  return _pyandor.SetTriggerLevel(*args)
SetTriggerLevel = _pyandor.SetTriggerLevel

def SetIODirection(*args):
  return _pyandor.SetIODirection(*args)
SetIODirection = _pyandor.SetIODirection

def SetIOLevel(*args):
  return _pyandor.SetIOLevel(*args)
SetIOLevel = _pyandor.SetIOLevel

def SetUSGenomics(*args):
  return _pyandor.SetUSGenomics(*args)
SetUSGenomics = _pyandor.SetUSGenomics

def SetVerticalRowBuffer(*args):
  return _pyandor.SetVerticalRowBuffer(*args)
SetVerticalRowBuffer = _pyandor.SetVerticalRowBuffer

def SetVerticalSpeed(*args):
  return _pyandor.SetVerticalSpeed(*args)
SetVerticalSpeed = _pyandor.SetVerticalSpeed

def SetVirtualChip(*args):
  return _pyandor.SetVirtualChip(*args)
SetVirtualChip = _pyandor.SetVirtualChip

def SetVSAmplitude(*args):
  return _pyandor.SetVSAmplitude(*args)
SetVSAmplitude = _pyandor.SetVSAmplitude

def SetVSSpeed(*args):
  return _pyandor.SetVSSpeed(*args)
SetVSSpeed = _pyandor.SetVSSpeed

def ShutDown():
  return _pyandor.ShutDown()
ShutDown = _pyandor.ShutDown

def StartAcquisition():
  return _pyandor.StartAcquisition()
StartAcquisition = _pyandor.StartAcquisition

def WaitForAcquisition():
  return _pyandor.WaitForAcquisition()
WaitForAcquisition = _pyandor.WaitForAcquisition

def WaitForAcquisitionByHandle(*args):
  return _pyandor.WaitForAcquisitionByHandle(*args)
WaitForAcquisitionByHandle = _pyandor.WaitForAcquisitionByHandle

def WaitForAcquisitionByHandleTimeOut(*args):
  return _pyandor.WaitForAcquisitionByHandleTimeOut(*args)
WaitForAcquisitionByHandleTimeOut = _pyandor.WaitForAcquisitionByHandleTimeOut

def WaitForAcquisitionTimeOut(*args):
  return _pyandor.WaitForAcquisitionTimeOut(*args)
WaitForAcquisitionTimeOut = _pyandor.WaitForAcquisitionTimeOut

def WhiteBalance(*args):
  return _pyandor.WhiteBalance(*args)
WhiteBalance = _pyandor.WhiteBalance

def OA_Initialize(*args):
  return _pyandor.OA_Initialize(*args)
OA_Initialize = _pyandor.OA_Initialize

def OA_EnableMode(*args):
  return _pyandor.OA_EnableMode(*args)
OA_EnableMode = _pyandor.OA_EnableMode

def OA_GetModeAcqParams(*args):
  return _pyandor.OA_GetModeAcqParams(*args)
OA_GetModeAcqParams = _pyandor.OA_GetModeAcqParams

def OA_GetUserModeNames(*args):
  return _pyandor.OA_GetUserModeNames(*args)
OA_GetUserModeNames = _pyandor.OA_GetUserModeNames

def OA_GetPreSetModeNames(*args):
  return _pyandor.OA_GetPreSetModeNames(*args)
OA_GetPreSetModeNames = _pyandor.OA_GetPreSetModeNames

def OA_GetNumberOfUserModes(*args):
  return _pyandor.OA_GetNumberOfUserModes(*args)
OA_GetNumberOfUserModes = _pyandor.OA_GetNumberOfUserModes

def OA_GetNumberOfPreSetModes(*args):
  return _pyandor.OA_GetNumberOfPreSetModes(*args)
OA_GetNumberOfPreSetModes = _pyandor.OA_GetNumberOfPreSetModes

def OA_GetNumberOfAcqParams(*args):
  return _pyandor.OA_GetNumberOfAcqParams(*args)
OA_GetNumberOfAcqParams = _pyandor.OA_GetNumberOfAcqParams

def OA_AddMode(*args):
  return _pyandor.OA_AddMode(*args)
OA_AddMode = _pyandor.OA_AddMode

def OA_WriteToFile(*args):
  return _pyandor.OA_WriteToFile(*args)
OA_WriteToFile = _pyandor.OA_WriteToFile

def OA_DeleteMode(*args):
  return _pyandor.OA_DeleteMode(*args)
OA_DeleteMode = _pyandor.OA_DeleteMode

def OA_SetInt(*args):
  return _pyandor.OA_SetInt(*args)
OA_SetInt = _pyandor.OA_SetInt

def OA_SetFloat(*args):
  return _pyandor.OA_SetFloat(*args)
OA_SetFloat = _pyandor.OA_SetFloat

def OA_SetString(*args):
  return _pyandor.OA_SetString(*args)
OA_SetString = _pyandor.OA_SetString

def OA_GetInt(*args):
  return _pyandor.OA_GetInt(*args)
OA_GetInt = _pyandor.OA_GetInt

def OA_GetFloat(*args):
  return _pyandor.OA_GetFloat(*args)
OA_GetFloat = _pyandor.OA_GetFloat

def OA_GetString(*args):
  return _pyandor.OA_GetString(*args)
OA_GetString = _pyandor.OA_GetString

def Filter_SetMode(*args):
  return _pyandor.Filter_SetMode(*args)
Filter_SetMode = _pyandor.Filter_SetMode

def Filter_GetMode(*args):
  return _pyandor.Filter_GetMode(*args)
Filter_GetMode = _pyandor.Filter_GetMode

def Filter_SetThreshold(*args):
  return _pyandor.Filter_SetThreshold(*args)
Filter_SetThreshold = _pyandor.Filter_SetThreshold

def Filter_GetThreshold(*args):
  return _pyandor.Filter_GetThreshold(*args)
Filter_GetThreshold = _pyandor.Filter_GetThreshold

def Filter_SetDataAveragingMode(*args):
  return _pyandor.Filter_SetDataAveragingMode(*args)
Filter_SetDataAveragingMode = _pyandor.Filter_SetDataAveragingMode

def Filter_GetDataAveragingMode(*args):
  return _pyandor.Filter_GetDataAveragingMode(*args)
Filter_GetDataAveragingMode = _pyandor.Filter_GetDataAveragingMode

def Filter_SetAveragingFrameCount(*args):
  return _pyandor.Filter_SetAveragingFrameCount(*args)
Filter_SetAveragingFrameCount = _pyandor.Filter_SetAveragingFrameCount

def Filter_GetAveragingFrameCount(*args):
  return _pyandor.Filter_GetAveragingFrameCount(*args)
Filter_GetAveragingFrameCount = _pyandor.Filter_GetAveragingFrameCount

def Filter_SetAveragingFactor(*args):
  return _pyandor.Filter_SetAveragingFactor(*args)
Filter_SetAveragingFactor = _pyandor.Filter_SetAveragingFactor

def Filter_GetAveragingFactor(*args):
  return _pyandor.Filter_GetAveragingFactor(*args)
Filter_GetAveragingFactor = _pyandor.Filter_GetAveragingFactor

def PostProcessNoiseFilter(*args):
  return _pyandor.PostProcessNoiseFilter(*args)
PostProcessNoiseFilter = _pyandor.PostProcessNoiseFilter

def PostProcessCountConvert(*args):
  return _pyandor.PostProcessCountConvert(*args)
PostProcessCountConvert = _pyandor.PostProcessCountConvert

def PostProcessPhotonCounting(*args):
  return _pyandor.PostProcessPhotonCounting(*args)
PostProcessPhotonCounting = _pyandor.PostProcessPhotonCounting

def PostProcessDataAveraging(*args):
  return _pyandor.PostProcessDataAveraging(*args)
PostProcessDataAveraging = _pyandor.PostProcessDataAveraging
DRV_ERROR_CODES = _pyandor.DRV_ERROR_CODES
DRV_SUCCESS = _pyandor.DRV_SUCCESS
DRV_VXDNOTINSTALLED = _pyandor.DRV_VXDNOTINSTALLED
DRV_ERROR_SCAN = _pyandor.DRV_ERROR_SCAN
DRV_ERROR_CHECK_SUM = _pyandor.DRV_ERROR_CHECK_SUM
DRV_ERROR_FILELOAD = _pyandor.DRV_ERROR_FILELOAD
DRV_UNKNOWN_FUNCTION = _pyandor.DRV_UNKNOWN_FUNCTION
DRV_ERROR_VXD_INIT = _pyandor.DRV_ERROR_VXD_INIT
DRV_ERROR_ADDRESS = _pyandor.DRV_ERROR_ADDRESS
DRV_ERROR_PAGELOCK = _pyandor.DRV_ERROR_PAGELOCK
DRV_ERROR_PAGEUNLOCK = _pyandor.DRV_ERROR_PAGEUNLOCK
DRV_ERROR_BOARDTEST = _pyandor.DRV_ERROR_BOARDTEST
DRV_ERROR_ACK = _pyandor.DRV_ERROR_ACK
DRV_ERROR_UP_FIFO = _pyandor.DRV_ERROR_UP_FIFO
DRV_ERROR_PATTERN = _pyandor.DRV_ERROR_PATTERN
DRV_ACQUISITION_ERRORS = _pyandor.DRV_ACQUISITION_ERRORS
DRV_ACQ_BUFFER = _pyandor.DRV_ACQ_BUFFER
DRV_ACQ_DOWNFIFO_FULL = _pyandor.DRV_ACQ_DOWNFIFO_FULL
DRV_PROC_UNKONWN_INSTRUCTION = _pyandor.DRV_PROC_UNKONWN_INSTRUCTION
DRV_ILLEGAL_OP_CODE = _pyandor.DRV_ILLEGAL_OP_CODE
DRV_KINETIC_TIME_NOT_MET = _pyandor.DRV_KINETIC_TIME_NOT_MET
DRV_ACCUM_TIME_NOT_MET = _pyandor.DRV_ACCUM_TIME_NOT_MET
DRV_NO_NEW_DATA = _pyandor.DRV_NO_NEW_DATA
KERN_MEM_ERROR = _pyandor.KERN_MEM_ERROR
DRV_SPOOLERROR = _pyandor.DRV_SPOOLERROR
DRV_SPOOLSETUPERROR = _pyandor.DRV_SPOOLSETUPERROR
DRV_FILESIZELIMITERROR = _pyandor.DRV_FILESIZELIMITERROR
DRV_ERROR_FILESAVE = _pyandor.DRV_ERROR_FILESAVE
DRV_TEMPERATURE_CODES = _pyandor.DRV_TEMPERATURE_CODES
DRV_TEMPERATURE_OFF = _pyandor.DRV_TEMPERATURE_OFF
DRV_TEMPERATURE_NOT_STABILIZED = _pyandor.DRV_TEMPERATURE_NOT_STABILIZED
DRV_TEMPERATURE_STABILIZED = _pyandor.DRV_TEMPERATURE_STABILIZED
DRV_TEMPERATURE_NOT_REACHED = _pyandor.DRV_TEMPERATURE_NOT_REACHED
DRV_TEMPERATURE_OUT_RANGE = _pyandor.DRV_TEMPERATURE_OUT_RANGE
DRV_TEMPERATURE_NOT_SUPPORTED = _pyandor.DRV_TEMPERATURE_NOT_SUPPORTED
DRV_TEMPERATURE_DRIFT = _pyandor.DRV_TEMPERATURE_DRIFT
DRV_TEMP_CODES = _pyandor.DRV_TEMP_CODES
DRV_TEMP_OFF = _pyandor.DRV_TEMP_OFF
DRV_TEMP_NOT_STABILIZED = _pyandor.DRV_TEMP_NOT_STABILIZED
DRV_TEMP_STABILIZED = _pyandor.DRV_TEMP_STABILIZED
DRV_TEMP_NOT_REACHED = _pyandor.DRV_TEMP_NOT_REACHED
DRV_TEMP_OUT_RANGE = _pyandor.DRV_TEMP_OUT_RANGE
DRV_TEMP_NOT_SUPPORTED = _pyandor.DRV_TEMP_NOT_SUPPORTED
DRV_TEMP_DRIFT = _pyandor.DRV_TEMP_DRIFT
DRV_GENERAL_ERRORS = _pyandor.DRV_GENERAL_ERRORS
DRV_INVALID_AUX = _pyandor.DRV_INVALID_AUX
DRV_COF_NOTLOADED = _pyandor.DRV_COF_NOTLOADED
DRV_FPGAPROG = _pyandor.DRV_FPGAPROG
DRV_FLEXERROR = _pyandor.DRV_FLEXERROR
DRV_GPIBERROR = _pyandor.DRV_GPIBERROR
DRV_EEPROMVERSIONERROR = _pyandor.DRV_EEPROMVERSIONERROR
DRV_DATATYPE = _pyandor.DRV_DATATYPE
DRV_DRIVER_ERRORS = _pyandor.DRV_DRIVER_ERRORS
DRV_P1INVALID = _pyandor.DRV_P1INVALID
DRV_P2INVALID = _pyandor.DRV_P2INVALID
DRV_P3INVALID = _pyandor.DRV_P3INVALID
DRV_P4INVALID = _pyandor.DRV_P4INVALID
DRV_INIERROR = _pyandor.DRV_INIERROR
DRV_COFERROR = _pyandor.DRV_COFERROR
DRV_ACQUIRING = _pyandor.DRV_ACQUIRING
DRV_IDLE = _pyandor.DRV_IDLE
DRV_TEMPCYCLE = _pyandor.DRV_TEMPCYCLE
DRV_NOT_INITIALIZED = _pyandor.DRV_NOT_INITIALIZED
DRV_P5INVALID = _pyandor.DRV_P5INVALID
DRV_P6INVALID = _pyandor.DRV_P6INVALID
DRV_INVALID_MODE = _pyandor.DRV_INVALID_MODE
DRV_INVALID_FILTER = _pyandor.DRV_INVALID_FILTER
DRV_I2CERRORS = _pyandor.DRV_I2CERRORS
DRV_I2CDEVNOTFOUND = _pyandor.DRV_I2CDEVNOTFOUND
DRV_I2CTIMEOUT = _pyandor.DRV_I2CTIMEOUT
DRV_P7INVALID = _pyandor.DRV_P7INVALID
DRV_P8INVALID = _pyandor.DRV_P8INVALID
DRV_P9INVALID = _pyandor.DRV_P9INVALID
DRV_P10INVALID = _pyandor.DRV_P10INVALID
DRV_P11INVALID = _pyandor.DRV_P11INVALID
DRV_USBERROR = _pyandor.DRV_USBERROR
DRV_IOCERROR = _pyandor.DRV_IOCERROR
DRV_VRMVERSIONERROR = _pyandor.DRV_VRMVERSIONERROR
DRV_GATESTEPERROR = _pyandor.DRV_GATESTEPERROR
DRV_USB_INTERRUPT_ENDPOINT_ERROR = _pyandor.DRV_USB_INTERRUPT_ENDPOINT_ERROR
DRV_RANDOM_TRACK_ERROR = _pyandor.DRV_RANDOM_TRACK_ERROR
DRV_INVALID_TRIGGER_MODE = _pyandor.DRV_INVALID_TRIGGER_MODE
DRV_LOAD_FIRMWARE_ERROR = _pyandor.DRV_LOAD_FIRMWARE_ERROR
DRV_DIVIDE_BY_ZERO_ERROR = _pyandor.DRV_DIVIDE_BY_ZERO_ERROR
DRV_INVALID_RINGEXPOSURES = _pyandor.DRV_INVALID_RINGEXPOSURES
DRV_BINNING_ERROR = _pyandor.DRV_BINNING_ERROR
DRV_INVALID_AMPLIFIER = _pyandor.DRV_INVALID_AMPLIFIER
DRV_INVALID_COUNTCONVERT_MODE = _pyandor.DRV_INVALID_COUNTCONVERT_MODE
DRV_ERROR_NOCAMERA = _pyandor.DRV_ERROR_NOCAMERA
DRV_NOT_SUPPORTED = _pyandor.DRV_NOT_SUPPORTED
DRV_NOT_AVAILABLE = _pyandor.DRV_NOT_AVAILABLE
DRV_ERROR_MAP = _pyandor.DRV_ERROR_MAP
DRV_ERROR_UNMAP = _pyandor.DRV_ERROR_UNMAP
DRV_ERROR_MDL = _pyandor.DRV_ERROR_MDL
DRV_ERROR_UNMDL = _pyandor.DRV_ERROR_UNMDL
DRV_ERROR_BUFFSIZE = _pyandor.DRV_ERROR_BUFFSIZE
DRV_ERROR_NOHANDLE = _pyandor.DRV_ERROR_NOHANDLE
DRV_GATING_NOT_AVAILABLE = _pyandor.DRV_GATING_NOT_AVAILABLE
DRV_FPGA_VOLTAGE_ERROR = _pyandor.DRV_FPGA_VOLTAGE_ERROR
DRV_OW_CMD_FAIL = _pyandor.DRV_OW_CMD_FAIL
DRV_OWMEMORY_BAD_ADDR = _pyandor.DRV_OWMEMORY_BAD_ADDR
DRV_OWCMD_NOT_AVAILABLE = _pyandor.DRV_OWCMD_NOT_AVAILABLE
DRV_OW_NO_SLAVES = _pyandor.DRV_OW_NO_SLAVES
DRV_OW_NOT_INITIALIZED = _pyandor.DRV_OW_NOT_INITIALIZED
DRV_OW_ERROR_SLAVE_NUM = _pyandor.DRV_OW_ERROR_SLAVE_NUM
DRV_MSTIMINGS_ERROR = _pyandor.DRV_MSTIMINGS_ERROR
DRV_OA_NULL_ERROR = _pyandor.DRV_OA_NULL_ERROR
DRV_OA_PARSE_DTD_ERROR = _pyandor.DRV_OA_PARSE_DTD_ERROR
DRV_OA_DTD_VALIDATE_ERROR = _pyandor.DRV_OA_DTD_VALIDATE_ERROR
DRV_OA_FILE_ACCESS_ERROR = _pyandor.DRV_OA_FILE_ACCESS_ERROR
DRV_OA_FILE_DOES_NOT_EXIST = _pyandor.DRV_OA_FILE_DOES_NOT_EXIST
DRV_OA_XML_INVALID_OR_NOT_FOUND_ERROR = _pyandor.DRV_OA_XML_INVALID_OR_NOT_FOUND_ERROR
DRV_OA_PRESET_FILE_NOT_LOADED = _pyandor.DRV_OA_PRESET_FILE_NOT_LOADED
DRV_OA_USER_FILE_NOT_LOADED = _pyandor.DRV_OA_USER_FILE_NOT_LOADED
DRV_OA_PRESET_AND_USER_FILE_NOT_LOADED = _pyandor.DRV_OA_PRESET_AND_USER_FILE_NOT_LOADED
DRV_OA_INVALID_FILE = _pyandor.DRV_OA_INVALID_FILE
DRV_OA_FILE_HAS_BEEN_MODIFIED = _pyandor.DRV_OA_FILE_HAS_BEEN_MODIFIED
DRV_OA_BUFFER_FULL = _pyandor.DRV_OA_BUFFER_FULL
DRV_OA_INVALID_STRING_LENGTH = _pyandor.DRV_OA_INVALID_STRING_LENGTH
DRV_OA_INVALID_CHARS_IN_NAME = _pyandor.DRV_OA_INVALID_CHARS_IN_NAME
DRV_OA_INVALID_NAMING = _pyandor.DRV_OA_INVALID_NAMING
DRV_OA_GET_CAMERA_ERROR = _pyandor.DRV_OA_GET_CAMERA_ERROR
DRV_OA_MODE_ALREADY_EXISTS = _pyandor.DRV_OA_MODE_ALREADY_EXISTS
DRV_OA_STRINGS_NOT_EQUAL = _pyandor.DRV_OA_STRINGS_NOT_EQUAL
DRV_OA_NO_USER_DATA = _pyandor.DRV_OA_NO_USER_DATA
DRV_OA_VALUE_NOT_SUPPORTED = _pyandor.DRV_OA_VALUE_NOT_SUPPORTED
DRV_OA_MODE_DOES_NOT_EXIST = _pyandor.DRV_OA_MODE_DOES_NOT_EXIST
DRV_OA_CAMERA_NOT_SUPPORTED = _pyandor.DRV_OA_CAMERA_NOT_SUPPORTED
DRV_OA_FAILED_TO_GET_MODE = _pyandor.DRV_OA_FAILED_TO_GET_MODE
DRV_PROCESSING_FAILED = _pyandor.DRV_PROCESSING_FAILED
AC_ACQMODE_SINGLE = _pyandor.AC_ACQMODE_SINGLE
AC_ACQMODE_VIDEO = _pyandor.AC_ACQMODE_VIDEO
AC_ACQMODE_ACCUMULATE = _pyandor.AC_ACQMODE_ACCUMULATE
AC_ACQMODE_KINETIC = _pyandor.AC_ACQMODE_KINETIC
AC_ACQMODE_FRAMETRANSFER = _pyandor.AC_ACQMODE_FRAMETRANSFER
AC_ACQMODE_FASTKINETICS = _pyandor.AC_ACQMODE_FASTKINETICS
AC_ACQMODE_OVERLAP = _pyandor.AC_ACQMODE_OVERLAP
AC_READMODE_FULLIMAGE = _pyandor.AC_READMODE_FULLIMAGE
AC_READMODE_SUBIMAGE = _pyandor.AC_READMODE_SUBIMAGE
AC_READMODE_SINGLETRACK = _pyandor.AC_READMODE_SINGLETRACK
AC_READMODE_FVB = _pyandor.AC_READMODE_FVB
AC_READMODE_MULTITRACK = _pyandor.AC_READMODE_MULTITRACK
AC_READMODE_RANDOMTRACK = _pyandor.AC_READMODE_RANDOMTRACK
AC_READMODE_MULTITRACKSCAN = _pyandor.AC_READMODE_MULTITRACKSCAN
AC_TRIGGERMODE_INTERNAL = _pyandor.AC_TRIGGERMODE_INTERNAL
AC_TRIGGERMODE_EXTERNAL = _pyandor.AC_TRIGGERMODE_EXTERNAL
AC_TRIGGERMODE_EXTERNAL_FVB_EM = _pyandor.AC_TRIGGERMODE_EXTERNAL_FVB_EM
AC_TRIGGERMODE_CONTINUOUS = _pyandor.AC_TRIGGERMODE_CONTINUOUS
AC_TRIGGERMODE_EXTERNALSTART = _pyandor.AC_TRIGGERMODE_EXTERNALSTART
AC_TRIGGERMODE_EXTERNALEXPOSURE = _pyandor.AC_TRIGGERMODE_EXTERNALEXPOSURE
AC_TRIGGERMODE_INVERTED = _pyandor.AC_TRIGGERMODE_INVERTED
AC_TRIGGERMODE_EXTERNAL_CHARGESHIFTING = _pyandor.AC_TRIGGERMODE_EXTERNAL_CHARGESHIFTING
AC_TRIGGERMODE_BULB = _pyandor.AC_TRIGGERMODE_BULB
AC_CAMERATYPE_PDA = _pyandor.AC_CAMERATYPE_PDA
AC_CAMERATYPE_IXON = _pyandor.AC_CAMERATYPE_IXON
AC_CAMERATYPE_ICCD = _pyandor.AC_CAMERATYPE_ICCD
AC_CAMERATYPE_EMCCD = _pyandor.AC_CAMERATYPE_EMCCD
AC_CAMERATYPE_CCD = _pyandor.AC_CAMERATYPE_CCD
AC_CAMERATYPE_ISTAR = _pyandor.AC_CAMERATYPE_ISTAR
AC_CAMERATYPE_VIDEO = _pyandor.AC_CAMERATYPE_VIDEO
AC_CAMERATYPE_IDUS = _pyandor.AC_CAMERATYPE_IDUS
AC_CAMERATYPE_NEWTON = _pyandor.AC_CAMERATYPE_NEWTON
AC_CAMERATYPE_SURCAM = _pyandor.AC_CAMERATYPE_SURCAM
AC_CAMERATYPE_USBICCD = _pyandor.AC_CAMERATYPE_USBICCD
AC_CAMERATYPE_LUCA = _pyandor.AC_CAMERATYPE_LUCA
AC_CAMERATYPE_RESERVED = _pyandor.AC_CAMERATYPE_RESERVED
AC_CAMERATYPE_IKON = _pyandor.AC_CAMERATYPE_IKON
AC_CAMERATYPE_INGAAS = _pyandor.AC_CAMERATYPE_INGAAS
AC_CAMERATYPE_IVAC = _pyandor.AC_CAMERATYPE_IVAC
AC_CAMERATYPE_UNPROGRAMMED = _pyandor.AC_CAMERATYPE_UNPROGRAMMED
AC_CAMERATYPE_CLARA = _pyandor.AC_CAMERATYPE_CLARA
AC_CAMERATYPE_USBISTAR = _pyandor.AC_CAMERATYPE_USBISTAR
AC_CAMERATYPE_SIMCAM = _pyandor.AC_CAMERATYPE_SIMCAM
AC_CAMERATYPE_NEO = _pyandor.AC_CAMERATYPE_NEO
AC_CAMERATYPE_IXONULTRA = _pyandor.AC_CAMERATYPE_IXONULTRA
AC_CAMERATYPE_VOLMOS = _pyandor.AC_CAMERATYPE_VOLMOS
AC_PIXELMODE_8BIT = _pyandor.AC_PIXELMODE_8BIT
AC_PIXELMODE_14BIT = _pyandor.AC_PIXELMODE_14BIT
AC_PIXELMODE_16BIT = _pyandor.AC_PIXELMODE_16BIT
AC_PIXELMODE_32BIT = _pyandor.AC_PIXELMODE_32BIT
AC_PIXELMODE_MONO = _pyandor.AC_PIXELMODE_MONO
AC_PIXELMODE_RGB = _pyandor.AC_PIXELMODE_RGB
AC_PIXELMODE_CMY = _pyandor.AC_PIXELMODE_CMY
AC_SETFUNCTION_VREADOUT = _pyandor.AC_SETFUNCTION_VREADOUT
AC_SETFUNCTION_HREADOUT = _pyandor.AC_SETFUNCTION_HREADOUT
AC_SETFUNCTION_TEMPERATURE = _pyandor.AC_SETFUNCTION_TEMPERATURE
AC_SETFUNCTION_MCPGAIN = _pyandor.AC_SETFUNCTION_MCPGAIN
AC_SETFUNCTION_EMCCDGAIN = _pyandor.AC_SETFUNCTION_EMCCDGAIN
AC_SETFUNCTION_BASELINECLAMP = _pyandor.AC_SETFUNCTION_BASELINECLAMP
AC_SETFUNCTION_VSAMPLITUDE = _pyandor.AC_SETFUNCTION_VSAMPLITUDE
AC_SETFUNCTION_HIGHCAPACITY = _pyandor.AC_SETFUNCTION_HIGHCAPACITY
AC_SETFUNCTION_BASELINEOFFSET = _pyandor.AC_SETFUNCTION_BASELINEOFFSET
AC_SETFUNCTION_PREAMPGAIN = _pyandor.AC_SETFUNCTION_PREAMPGAIN
AC_SETFUNCTION_CROPMODE = _pyandor.AC_SETFUNCTION_CROPMODE
AC_SETFUNCTION_DMAPARAMETERS = _pyandor.AC_SETFUNCTION_DMAPARAMETERS
AC_SETFUNCTION_HORIZONTALBIN = _pyandor.AC_SETFUNCTION_HORIZONTALBIN
AC_SETFUNCTION_MULTITRACKHRANGE = _pyandor.AC_SETFUNCTION_MULTITRACKHRANGE
AC_SETFUNCTION_RANDOMTRACKNOGAPS = _pyandor.AC_SETFUNCTION_RANDOMTRACKNOGAPS
AC_SETFUNCTION_EMADVANCED = _pyandor.AC_SETFUNCTION_EMADVANCED
AC_SETFUNCTION_GATEMODE = _pyandor.AC_SETFUNCTION_GATEMODE
AC_SETFUNCTION_DDGTIMES = _pyandor.AC_SETFUNCTION_DDGTIMES
AC_SETFUNCTION_IOC = _pyandor.AC_SETFUNCTION_IOC
AC_SETFUNCTION_INTELLIGATE = _pyandor.AC_SETFUNCTION_INTELLIGATE
AC_SETFUNCTION_INSERTION_DELAY = _pyandor.AC_SETFUNCTION_INSERTION_DELAY
AC_SETFUNCTION_GATESTEP = _pyandor.AC_SETFUNCTION_GATESTEP
AC_SETFUNCTION_TRIGGERTERMINATION = _pyandor.AC_SETFUNCTION_TRIGGERTERMINATION
AC_SETFUNCTION_EXTENDEDNIR = _pyandor.AC_SETFUNCTION_EXTENDEDNIR
AC_SETFUNCTION_SPOOLTHREADCOUNT = _pyandor.AC_SETFUNCTION_SPOOLTHREADCOUNT
AC_SETFUNCTION_REGISTERPACK = _pyandor.AC_SETFUNCTION_REGISTERPACK
AC_SETFUNCTION_GAIN = _pyandor.AC_SETFUNCTION_GAIN
AC_SETFUNCTION_ICCDGAIN = _pyandor.AC_SETFUNCTION_ICCDGAIN
AC_GETFUNCTION_TEMPERATURE = _pyandor.AC_GETFUNCTION_TEMPERATURE
AC_GETFUNCTION_TARGETTEMPERATURE = _pyandor.AC_GETFUNCTION_TARGETTEMPERATURE
AC_GETFUNCTION_TEMPERATURERANGE = _pyandor.AC_GETFUNCTION_TEMPERATURERANGE
AC_GETFUNCTION_DETECTORSIZE = _pyandor.AC_GETFUNCTION_DETECTORSIZE
AC_GETFUNCTION_MCPGAIN = _pyandor.AC_GETFUNCTION_MCPGAIN
AC_GETFUNCTION_EMCCDGAIN = _pyandor.AC_GETFUNCTION_EMCCDGAIN
AC_GETFUNCTION_HVFLAG = _pyandor.AC_GETFUNCTION_HVFLAG
AC_GETFUNCTION_GATEMODE = _pyandor.AC_GETFUNCTION_GATEMODE
AC_GETFUNCTION_DDGTIMES = _pyandor.AC_GETFUNCTION_DDGTIMES
AC_GETFUNCTION_IOC = _pyandor.AC_GETFUNCTION_IOC
AC_GETFUNCTION_INTELLIGATE = _pyandor.AC_GETFUNCTION_INTELLIGATE
AC_GETFUNCTION_INSERTION_DELAY = _pyandor.AC_GETFUNCTION_INSERTION_DELAY
AC_GETFUNCTION_GATESTEP = _pyandor.AC_GETFUNCTION_GATESTEP
AC_GETFUNCTION_PHOSPHORSTATUS = _pyandor.AC_GETFUNCTION_PHOSPHORSTATUS
AC_GETFUNCTION_MCPGAINTABLE = _pyandor.AC_GETFUNCTION_MCPGAINTABLE
AC_GETFUNCTION_BASELINECLAMP = _pyandor.AC_GETFUNCTION_BASELINECLAMP
AC_GETFUNCTION_GAIN = _pyandor.AC_GETFUNCTION_GAIN
AC_GETFUNCTION_ICCDGAIN = _pyandor.AC_GETFUNCTION_ICCDGAIN
AC_FEATURES_POLLING = _pyandor.AC_FEATURES_POLLING
AC_FEATURES_EVENTS = _pyandor.AC_FEATURES_EVENTS
AC_FEATURES_SPOOLING = _pyandor.AC_FEATURES_SPOOLING
AC_FEATURES_SHUTTER = _pyandor.AC_FEATURES_SHUTTER
AC_FEATURES_SHUTTEREX = _pyandor.AC_FEATURES_SHUTTEREX
AC_FEATURES_EXTERNAL_I2C = _pyandor.AC_FEATURES_EXTERNAL_I2C
AC_FEATURES_SATURATIONEVENT = _pyandor.AC_FEATURES_SATURATIONEVENT
AC_FEATURES_FANCONTROL = _pyandor.AC_FEATURES_FANCONTROL
AC_FEATURES_MIDFANCONTROL = _pyandor.AC_FEATURES_MIDFANCONTROL
AC_FEATURES_TEMPERATUREDURINGACQUISITION = _pyandor.AC_FEATURES_TEMPERATUREDURINGACQUISITION
AC_FEATURES_KEEPCLEANCONTROL = _pyandor.AC_FEATURES_KEEPCLEANCONTROL
AC_FEATURES_DDGLITE = _pyandor.AC_FEATURES_DDGLITE
AC_FEATURES_FTEXTERNALEXPOSURE = _pyandor.AC_FEATURES_FTEXTERNALEXPOSURE
AC_FEATURES_KINETICEXTERNALEXPOSURE = _pyandor.AC_FEATURES_KINETICEXTERNALEXPOSURE
AC_FEATURES_DACCONTROL = _pyandor.AC_FEATURES_DACCONTROL
AC_FEATURES_METADATA = _pyandor.AC_FEATURES_METADATA
AC_FEATURES_IOCONTROL = _pyandor.AC_FEATURES_IOCONTROL
AC_FEATURES_PHOTONCOUNTING = _pyandor.AC_FEATURES_PHOTONCOUNTING
AC_FEATURES_COUNTCONVERT = _pyandor.AC_FEATURES_COUNTCONVERT
AC_FEATURES_DUALMODE = _pyandor.AC_FEATURES_DUALMODE
AC_FEATURES_OPTACQUIRE = _pyandor.AC_FEATURES_OPTACQUIRE
AC_FEATURES_REALTIMESPURIOUSNOISEFILTER = _pyandor.AC_FEATURES_REALTIMESPURIOUSNOISEFILTER
AC_FEATURES_POSTPROCESSSPURIOUSNOISEFILTER = _pyandor.AC_FEATURES_POSTPROCESSSPURIOUSNOISEFILTER
AC_FEATURES_DUALPREAMPGAIN = _pyandor.AC_FEATURES_DUALPREAMPGAIN
AC_FEATURES_DEFECT_CORRECTION = _pyandor.AC_FEATURES_DEFECT_CORRECTION
AC_FEATURES_STARTOFEXPOSURE_EVENT = _pyandor.AC_FEATURES_STARTOFEXPOSURE_EVENT
AC_FEATURES_ENDOFEXPOSURE_EVENT = _pyandor.AC_FEATURES_ENDOFEXPOSURE_EVENT
AC_FEATURES_CAMERALINK = _pyandor.AC_FEATURES_CAMERALINK
AC_EMGAIN_8BIT = _pyandor.AC_EMGAIN_8BIT
AC_EMGAIN_12BIT = _pyandor.AC_EMGAIN_12BIT
AC_EMGAIN_LINEAR12 = _pyandor.AC_EMGAIN_LINEAR12
AC_EMGAIN_REAL12 = _pyandor.AC_EMGAIN_REAL12
# This file is compatible with both classic and new-style classes.


